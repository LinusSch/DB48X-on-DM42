// ****************************************************************************
//  ids.tbl                                                      DB48X project
// ****************************************************************************
//
//   File Description:
//
//     List of all IDs for RPL opcodes
//
//      ID(i)      defines an ID that is not parseable as a command, e.g. types
//      CMD(i)     defines an ID that is parseable as a command, e.g. "drop"
//      OP(i,n)    defines an operator ID, e.g. "+"
//      NAMED(i,l) defines an ID with an alternate long spelling, e.g. dup
//
//
//
//
// ****************************************************************************
//   (C) 2022 Christophe de Dinechin <christophe@dinechin.org>
//   This software is licensed under the terms outlined in LICENSE.txt
// ****************************************************************************
//   This file is part of DB48X.
//
//   DB48X is free software: you can redistribute it and/or modify
//   it under the terms outlined in the LICENSE.txt file
//
//   DB48X is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// ****************************************************************************

// Commands, e.g. "swap"
#ifndef CMD
#define CMD(id)                 ID(id)
#endif

// Commands with a long name, e.g. "neg" can be called "Negate"
#ifndef NAMED
#define NAMED(id, longname)     CMD(id)
#endif

// Operators, e.g. "+"
#ifndef OP
#define OP(i, n)                NAMED(i, n)
#endif

// Aliases for commands with multiple spelling
#ifndef ALIAS
#define ALIAS(op, name)
#endif

#ifndef OPCODE
#define OPCODE(id)              ID(id)
#endif

ID(object)                      // Value 0 is reserved for "not implemented"

ID(symbol)
ID(directory)
ID(text)
ID(list)
ID(program)
ID(equation)
ID(array)
ID(menu)

#define FIRST_INTEGER_TYPE      ID_hex_integer
ID(hex_integer)
ID(oct_integer)
ID(bin_integer)
ID(dec_integer)

#define FIRST_REAL_TYPE         ID_integer
ID(integer)
ID(neg_integer)
#define LAST_INTEGER_TYPE       ID_neg_integer

#define FIRST_DECIMAL_TYPE      ID_decimal32
ID(decimal32)
ID(decimal64)
ID(decimal128)
#define LAST_DECIMAL_TYPE       ID_decimal128
#define LAST_REAL_TYPE          ID_decimal128

#define FIRST_COMMAND           ID_Drop
CMD(Drop)
NAMED(Dup, "Duplicate")
CMD(Swap)
NAMED(Eval, "Evaluate")
NAMED(Sto, "Store")
NAMED(Rcl, "Recall")

#define FIRST_ALGEBRAIC         ID_add
OP(add, "+")
OP(sub, "-")
OP(mul, "×")
OP(div, "÷")
ALIAS(mul, "*")
ALIAS(div, "/")
CMD(mod)
CMD(rem)
OP(pow, "^")
NAMED(hypot, "Hypothenuse")

NAMED(neg, "Negate")
NAMED(inv, "Invert")
NAMED(sq,  "Squared")
CMD(cubed)

NAMED(sqrt, "√")
NAMED(cbrt, "∛")

CMD(sin)
CMD(cos)
CMD(tan)
NAMED(asin, "sin⁻¹")
NAMED(acos,  "cos⁻¹")
NAMED(atan,  "tan⁻¹")

CMD(sinh)
CMD(cosh)
CMD(tanh)
NAMED(asinh, "sinh⁻¹")
NAMED(acosh, "cosh⁻¹")
NAMED(atanh, "tanh⁻¹")

CMD(log1p)
CMD(expm1)
CMD(log)
CMD(log10)
CMD(log2)
CMD(exp)
CMD(exp10)
CMD(exp2)
CMD(erf)
CMD(erfc)
CMD(tgamma)
CMD(lgamma)
#define LAST_ALGEBRAIC          ID_lgamma

CMD(Purge)
CMD(PurgeAll)
NAMED(Mem, "AvailableMemory")
CMD(FreeMemory)
CMD(SystemMemory)
CMD(GarbageCollect)

#define LAST_IMMEDIATE          ID_GarbageCollect


// ============================================================================
//
//   Menus
//
// ============================================================================

CMD(MainMenu)

CMD(MathMenu)
CMD(RealMenu)
CMD(ComplexMenu)
CMD(VectorMenu)
CMD(MatrixMenu)
CMD(HyperbolicMenu)
CMD(CircularMenu)
CMD(BasesMenu)
CMD(ProbabilitiesMenu)
CMD(StatisticsMenu)
CMD(FourierMenu)
CMD(ConstantsMenu)
CMD(SymbolicMenu)

CMD(ProgramMenu)
CMD(TestsMenu)
CMD(LoopsMenu)
CMD(ListMenu)

CMD(VariablesMenu)

CMD(Catalog)

CMD(MenuNextPage)
CMD(MenuPreviousPage)
CMD(MenuFirstPage)

CMD(Unimplemented)
#define LAST_COMMAND            ID_Unimplemented


// ============================================================================
//
//   Commands that we don't want to see appear in the catalog
//
// ============================================================================

CMD(AutoComplete)
CMD(VariablesMenuExecute)
CMD(VariablesMenuRecall)
CMD(VariablesMenuStore)


// ============================================================================
//
//   Special objects
//
// ============================================================================

ID(font)
ID(dense_font)
ID(sparse_font)
ID(dmcp_font)


// ============================================================================
//
//    Internal IDs used as opcode for the handler
//
// ============================================================================

OPCODE(EVAL)
OPCODE(EXEC)
OPCODE(SIZE)
OPCODE(PARSE)
OPCODE(RENDER)
OPCODE(HELP)
OPCODE(MENU)
OPCODE(MENU_MARKER)

#undef ID
#undef OP
#undef CMD
#undef NAMED
#undef ALIAS
#undef OPCODE
