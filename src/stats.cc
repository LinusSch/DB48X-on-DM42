// ****************************************************************************
//  stats.cc                                                      DB48X project
// ****************************************************************************
//
//   File Description:
//
//
//
//
//
//
//
//
//
//
// ****************************************************************************
//   (C) 2023 Christophe de Dinechin <christophe@dinechin.org>
//   This software is licensed under the terms outlined in LICENSE.txt
// ****************************************************************************
//   This file is part of DB48X.
//
//   DB48X is free software: you can redistribute it and/or modify
//   it under the terms outlined in the LICENSE.txt file
//
//   DB48X is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// ****************************************************************************

#include "stats.h"
#include "integer.h"
#include "variables.h"


// ============================================================================
//
//   Stats parameters
//
// ============================================================================

StatsParameters::StatsParameters()
// ----------------------------------------------------------------------------
//   Default values
// ----------------------------------------------------------------------------
    : model(command::ID_LinearFit),
      xcol(integer::make(1)),
      ycol(integer::make(2)),
      intercept(integer::make(0)),
      slope(integer::make(0))
{
    parse();
}


bool StatsParameters::parse(list_g parms)
// ----------------------------------------------------------------------------
//   Parse a PPAR / StatsParameters list
// ----------------------------------------------------------------------------
{
    if (!parms)
        return false;

    uint index = 0;
    object::id type;
    for (object_p obj: *parms)
    {
        bool valid = false;
        switch(index)
        {
        case 0:
            xcol = obj->algebraic_child(0);
            break;
        case 1:
            ycol = obj->algebraic_child(1);
            break;
        case 2:
            intercept = obj->algebraic_child(2);
            break;
        case 3:
            slope = obj->algebraic_child(3);
            break;
        case 4:
            type = obj->type();
            if (type >= object::ID_LinearFit &&
                type <= object::ID_LogarithmicFit)
                model = type;
            break;
        default:
            break;
        }
        if (!valid)
        {
            rt.invalid_stats_parameters_error();
            return false;
        }
        index++;
    }
    return true;
}


bool StatsParameters::parse(symbol_g name)
// ----------------------------------------------------------------------------
//   Parse plot parameters from a variable name
// ----------------------------------------------------------------------------
{
    if (object_p obj = directory::recall_all(name))
        if (list_p parms = obj->as<list>())
            return parse(parms);
    return false;
}


bool StatsParameters::parse(cstring name)
// ----------------------------------------------------------------------------
//   Parse plot parameters from C variable name
// ----------------------------------------------------------------------------
{
    symbol_p sym = symbol::make(name);
    return parse(sym);
}


bool StatsParameters::parse()
// ----------------------------------------------------------------------------
//   Check if we have StatsParameters or PPAR
// ----------------------------------------------------------------------------
{
    return parse("StatsParameters") || parse("Î£PAR");
}



// ============================================================================
//
//   Statistics
//
// ============================================================================


COMMAND_BODY(AddData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(RemoveData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(RecallData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(StoreData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(ClearData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(DataSize)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Mean)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Median)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(MinData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(MaxData)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(SumOfX)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(SumOfY)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(SumOfXY)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(SumOfXSquares)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(SumOfYSquares)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}





COMMAND_BODY(Variance)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Correlation)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Covariance)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(StandardDeviation)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(PopulationVariance)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(PopulationStandardDeviation)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(PopulationCovariance)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Bins)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(Total)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(IndependentColumn)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(DependentColumn)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(DataColumns)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Intercept)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(Slope)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}



COMMAND_BODY(LinearRegression)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(BestFit)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(LinearFit)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(ExponentialFit)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(PowerFit)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}


COMMAND_BODY(LogarithmicFit)
// ----------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------
{
    return OK;
}
